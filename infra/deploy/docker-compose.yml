version: "3.8"

services:
  backend:
    container_name: deploy-backend
    image: "${DOCKER_USERNAME}/jjami-backend-app:latest"
    restart: always
    env_file:
      - .env  # 환경 변수 관리 (DB 정보, JWT 등)
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - redis
    networks:
      - jjami_network
    expose:
      - "8080"  # Nginx에서 접근할 포트

  redis:
    container_name: deploy-redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - jjami_network

  nginx:
    container_name: deploy-nginx
    image: nginx:latest
    restart: always
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/conf.d:/etc/nginx/conf.d:ro   # 개별 도메인 설정 포함
      - ./infra/nginx/certbot:/etc/letsencrypt      # SSL 인증서 공유
    depends_on:
      - backend
    networks:
      - jjami_network

  certbot:
    container_name: deploy-certbot
    image: certbot/certbot:latest
    volumes:
      - ./infra/nginx/certbot:/etc/letsencrypt  # 인증서 저장 위치
      - ./infra/nginx/conf.d:/var/www/certbot   # 인증을 위한 경로 공유
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done;'"
    networks:
      - jjami_network
networks:
  jjami_network:
    driver: bridge
